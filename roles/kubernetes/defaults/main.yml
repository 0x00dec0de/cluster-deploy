---
# Log level 0 - debug
k8s_log_level: 2

# Users access data
k8s_admin_token: 'Admin user token should be here'
k8s_admin_username: admin
k8s_admin_password: 'password'
k8s_release_token: 'Release user token should be here'
k8s_release_username: release
k8s_release_password: 'password'
k8s_guest_token: 'Guest user token should be here'
k8s_guest_username: guest
k8s_guest_password: 'password'

# It will be used as the Internal dns domain name if DNS is enabled.
# Services will be discoverable under
# <service-name>.<namespace>.svc.<domainname>.<clustername>, e.g.
# myservice.default.svc.k8s.cluster
k8s_domain_name: k8s
k8s_cluster_name: cluster
k8s_cluster_domain: '{{ k8s_domain_name }}.{{ k8s_cluster_name }}'

# Kubernetes master and services host names
k8s_master_name: master.your-domain-name
k8s_services_name: services.your-domain-name

# SSL base certificate name
# SSL folder and file names will use the same name
ssl_name: kubernetes

# Path to files with SSL certificates and keys
ssl_dir: /etc/ssl/{{ ssl_name }}

# Flannel backend type (Options: gce, vxlan)
k8s_flannel_backend: vxlan

# ETCD client port, peer port
etcd_client_port: 2379

# URL scheme for kubernetes services
k8s_url_scheme: https
# Kubernetes service API port
k8s_api_port: 443

# Kubernetes internal network for services.
# Kubernetes services will get fake IP addresses from this range.
# This range must not conflict with anything in your infrastructure. These
# addresses do not need to be routable and must just be an unused block of space.
k8s_services_network: 10.254.0.0/16

# IP address of kubernetes service
# Usually it's first address in services subnet
k8s_cluster_service_ip: 10.254.0.1

# IP address of Kube DNS
# It should be in range of services subnet
k8s_cluster_dns: 10.254.0.10

# Flannel internal overlay network. It will assign IP
# addresses from this range to individual pods.
# This network must be unused block of space.
k8s_flannel_network: 10.20.0.0/16

# Kubernetes hyperkube version
k8s_version: 1.5.6

# Calico version 
k8s_calico_version: 1.1.1

# Container Network Interface (CNI) bin & config path
cni_bin_dir: /opt/cni/bin
cni_conf_dir: /etc/kubernetes/cni/net.d

# Kubernetes configs path
k8s_conf_dir: /etc/kubernetes
k8s_manifests_dir: '{{ k8s_conf_dir }}/manifests'
k8s_policy_dir: '{{ k8s_conf_dir }}/policy'
k8s_calico_dir: '{{ k8s_conf_dir }}/calico'

# Kubelet data path
k8s_kubelet_dir: /var/lib/kubelet

# Executable files path
k8s_bin_dir: /usr/bin

# Systemd services path
k8s_svc_dir: /usr/lib/systemd/system

# Systemd configs path
k8s_svc_conf_dir: /etc/systemd/system.conf.d

# Master hosts nsmes
k8s_master_hosts: {}

# Nodes hosts names
k8s_node_hosts: {}

# Hyperkube image
k8s_hyperkube_image: gcr.io/google_containers/hyperkube
k8s_hyperkube_image_tag: v{{ k8s_version }}

# Flannel image
k8s_flannel_image: quay.io/coreos/flannel
k8s_flannel_image_tag: v0.7.1

# ETCD image for flannel init job
k8s_etcd_image: quay.io/coreos/etcd
k8s_etcd_image_tag: v3.1.6

# Calico images
k8s_calico_node_image: quay.io/calico/node
k8s_calico_node_image_tag: v{{ k8s_calico_version }}
k8s_calico_cni_image: quay.io/calico/cni
k8s_calico_cni_image_tag: v1.6.2
k8s_calico_kube_policy_controller_image: quay.io/calico/kube-policy-controller
k8s_calico_kube_policy_controller_image_tag: v0.6.0

# Master servers
k8s_api_servers: "{% for host in k8s_master_hosts %}{{ k8s_url_scheme }}://{{ host }}:{{ k8s_api_port }}{% if not loop.last %},{% endif %}{% endfor %}"
# ETCD servers
k8s_etcd_servers: "{% for host in k8s_master_hosts %}{{ k8s_url_scheme }}://{{ host }}:{{ etcd_client_port }}{% if not loop.last %},{% endif %}{% endfor %}"

